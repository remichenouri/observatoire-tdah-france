import requests
import json
from datetime import datetime

def validate_apis():
    """Valide l'acc√®s aux APIs gouvernementales fran√ßaises"""
    
    apis_to_test = [
        {
            "name": "Data.gouv.fr - Sant√©",
            "url": "https://www.data.gouv.fr/api/1/datasets/?q=sant√©",
            "expected_keys": ["data", "total"]
        },
        {
            "name": "API G√©o - R√©gions",
            "url": "https://geo.api.gouv.fr/regions",
            "expected_keys": ["nom", "code"]
        },
        {
            "name": "Data.gouv.fr - TDAH",
            "url": "https://www.data.gouv.fr/api/1/datasets/?q=TDAH",
            "expected_keys": ["data", "total"]
        }
    ]
    
    results = {}
    
    for api in apis_to_test:
        try:
            response = requests.get(api["url"], timeout=10)
            
            # V√©rification du statut HTTP
            assert response.status_code == 200, f"HTTP {response.status_code}"
            
            # V√©rification du contenu JSON
            data = response.json()
            
            # V√©rification des cl√©s attendues
            if api["expected_keys"]:
                if isinstance(data, list) and len(data) > 0:
                    for key in api["expected_keys"]:
                        assert key in data[0], f"Cl√© manquante: {key}"
                elif isinstance(data, dict):
                    for key in api["expected_keys"]:
                        assert key in data, f"Cl√© manquante: {key}"
            
            results[api["name"]] = {
                "status": "‚úÖ SUCCESS",
                "response_time": response.elapsed.total_seconds(),
                "data_size": len(str(data))
            }
            
        except Exception as e:
            results[api["name"]] = {
                "status": f"‚ùå ERROR: {str(e)}",
                "response_time": None,
                "data_size": None
            }
    
    return results

def generate_validation_report():
    """G√©n√®re un rapport de validation"""
    
    print("üîç VALIDATION DE L'INFRASTRUCTURE - Observatoire TDAH France")
    print("="*60)
    print(f"Date: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    results = validate_apis()
    
    for api_name, result in results.items():
        print(f"üì° {api_name}")
        print(f"   Statut: {result['status']}")
        if result['response_time']:
            print(f"   Temps de r√©ponse: {result['response_time']:.2f}s")
            print(f"   Taille des donn√©es: {result['data_size']} caract√®res")
        print()
    
    # V√©rification globale
    all_success = all("SUCCESS" in result['status'] for result in results.values())
    
    if all_success:
        print("üéâ TOUTES LES APIs SONT ACCESSIBLES")
        print("‚úÖ Infrastructure valid√©e avec succ√®s")
    else:
        print("‚ö†Ô∏è  CERTAINES APIs NE SONT PAS ACCESSIBLES")
        print("‚ùå V√©rifiez votre connexion internet et r√©essayez")
    
    return all_success

if __name__ == "__main__":
    success = generate_validation_report()
    exit(0 if success else 1)
